# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'archive-server-build/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: OneLuckiDev.json2variable.vsts-release-web-test.oneLuckiDevJson2Variable@1 
  displayName: 'JSON to Variable'
  inputs: 
    jsonFile: '$(Build.Repository.LocalPath)/archive-server-swarm/target/classes/version.json' 
    shouldPrefixVariables: true 
    variablePrefix: json
- task: Docker@2
  displayName: Docker login    
  inputs:
    containerRegistry: 'docker@github'
    command: 'login'
- task: Docker@2
  displayName: Build and push the image
  inputs:
    command: buildAndPush
    dockerfile: '$(Build.SourcesDirectory)/archive-server-swarm/Dockerfile'
    repository: docker.pkg.github.com/cryxy/webcam-archive/archive-server-swarm 
    tags: |
      $(json.version)